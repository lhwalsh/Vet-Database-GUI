
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Luke Walsh
 */
public class AddMedicalRecord extends javax.swing.JFrame {

    /**
     * Creates new form PopUpAdd
     */
    public AddMedicalRecord() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NoTextErrorMessage = new javax.swing.JOptionPane();
        MRDone = new javax.swing.JButton();
        MRCancelAdd = new javax.swing.JButton();
        PetNameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NewPetButton = new javax.swing.JButton();
        StatusLabel = new javax.swing.JLabel();
        StatusTextField = new javax.swing.JTextField();
        NewOwnerButton = new javax.swing.JButton();
        DiseaseTextField = new javax.swing.JTextField();
        AnotherButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 350));

        MRDone.setText("Done");
        MRDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MRDoneActionPerformed(evt);
            }
        });

        MRCancelAdd.setText("Cancel");
        MRCancelAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MRCancelAddActionPerformed(evt);
            }
        });

        PetNameTextField.setOpaque(false);
        PetNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PetNameTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Pet Name:");

        jLabel2.setText("Disease Name (one per submission):");

        NewPetButton.setText("New Pet?");
        NewPetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPetButtonActionPerformed(evt);
            }
        });

        StatusLabel.setText("Status (past or current):");

        NewOwnerButton.setText("New Owner?");
        NewOwnerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewOwnerButtonActionPerformed(evt);
            }
        });

        AnotherButton.setText("Add Another");
        AnotherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnotherButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(StatusLabel)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PetNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StatusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DiseaseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(MRCancelAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(174, 174, 174)
                        .addComponent(AnotherButton)))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MRDone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NewPetButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NewOwnerButton)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(49, 49, 49))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PetNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NewPetButton)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DiseaseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StatusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StatusLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(NewOwnerButton)))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MRCancelAdd)
                    .addComponent(MRDone)
                    .addComponent(AnotherButton))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PetNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PetNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PetNameTextFieldActionPerformed

    private void NewPetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPetButtonActionPerformed
        // TODO add your handling code here:
        NewPet pop = new NewPet();
        pop.setVisible(true);
    }//GEN-LAST:event_NewPetButtonActionPerformed

    private void MRDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MRDoneActionPerformed
        // TODO add your handling code here:
        if (PetNameTextField.getText().isEmpty()) {
             NoTextErrorMessage.showMessageDialog(MRDone, "Please enter a pet name.");
        } else {
            String[] newRecord = new String[3];
            newRecord[0] = PetNameTextField.getText();
            newRecord[1] = DiseaseTextField.getText();
            newRecord[2] = StatusTextField.getText();
            boolean empty = false;
            for(int i = 0; i < 3; i++) {
                if(newRecord[i].isEmpty()) {
                    empty = true;
                }
            }
            if (empty) {
                NoTextErrorMessage.showMessageDialog(MRDone, "Please fill in all text fields.");
            } 
            else {
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pets?useSSL=false", "root", "root");
                    PreparedStatement ps = con.prepareStatement("insert into medical_records(pet_name, disease_name, status)VALUES('"+newRecord[0]+"', '"+newRecord[1]+"', '"+newRecord[2]+"');");
                    ps.executeUpdate();
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
            VetDatabase pop = new VetDatabase();
            pop.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_MRDoneActionPerformed

    private void MRCancelAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MRCancelAddActionPerformed
        // TODO add your handling code here:
        VetDatabase pop = new VetDatabase();
        pop.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MRCancelAddActionPerformed

    private void NewOwnerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewOwnerButtonActionPerformed
        // TODO add your handling code here:
        NewOwner pop = new NewOwner();
        pop.setVisible(true);
    }//GEN-LAST:event_NewOwnerButtonActionPerformed

    private void AnotherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnotherButtonActionPerformed
        if (!DiseaseTextField.getText().isEmpty()) {
            newRecord[counter] = DiseaseTextField.getText();
            counter++;
            AddMedicalRecord pop = new AddMedicalRecord();
            pop.setVisible(true);
            this.dispose();
        } else {
            NoTextErrorMessage.showMessageDialog(AnotherButton, "Please enter a vaccination name.");
        }
    }//GEN-LAST:event_AnotherButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddMedicalRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddMedicalRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddMedicalRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddMedicalRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddMedicalRecord().setVisible(true);
            }
        });
    }
    String[] newRecord = new String[100];
    int counter = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AnotherButton;
    private javax.swing.JTextField DiseaseTextField;
    private javax.swing.JButton MRCancelAdd;
    private javax.swing.JButton MRDone;
    private javax.swing.JButton NewOwnerButton;
    private javax.swing.JButton NewPetButton;
    private javax.swing.JOptionPane NoTextErrorMessage;
    private javax.swing.JTextField PetNameTextField;
    private javax.swing.JLabel StatusLabel;
    private javax.swing.JTextField StatusTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
